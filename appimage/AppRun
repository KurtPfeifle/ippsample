#!/bin/bash

# The purpose of this custom AppRun script is
# to allow symlinking the AppImage and invoking
# the corresponding binary depending on which
# symlink was used to invoke the AppImage

HERE="$(dirname "$(readlink -f "${0}")")"

# https://github.com/istopwg/ippsample/blob/2c6a86046a5ef696792b6c22fd1bbeaef43647a8/config.h.in#L39-L51
export CUPS_DATADIR="$HERE/usr/share/cups"


if [ "x$1" == "xhelp" ] ; then
    echo ""
    echo " ---------------------------------------------------------------"
    echo "   Sample Implementation of an IPP Server with assorted Tools."
    echo "         Published by ISTO Printer Working Group (PWG)"
    echo " ---------------------------------------------------------------"
    echo ""
    echo " (This package uses the AppImage software packaging technology"
    echo "  for Linux ['One App == One File'] for easy availabilty of"
    echo "  this IPP testing toolkit across all major Linux distributions.)"
    echo ""
    echo " Usage: $0  help"
    echo " ------            # This message"
    echo ""
    echo "        $0  ippserver|ippfind|ipptool|ippproxy"
    echo "                   # Run the named sub-command"
    echo ""
    echo "        $0  listman"
    echo "                   # List available, embedded manual pages"
    echo ""
    echo "        $0  man ippserver|ippfind|ipptool|ipptoolfile|ippproxy"
    echo "                   # Display embedded manual page(s)"
    echo ""
    echo "        $0  listhtml"
    echo "                   # List as HTML embedded manual page(s)"
    echo ""
    echo "        $0  html ippserver|ippfind|ipptool|ipptoolfile|ippproxy"
    echo "                   # Use browser to display embedded manual page(s)"
    echo ""
    echo "        $0  listtests"
    echo "                   # List available, embedded IPP test files"
    echo ""
    echo "        $0  cat <testfile>"
    echo "                   # Print contents of named IPP test file"
    echo ""
    echo "        $0  listdocs"
    echo "                   # List available, builtin test documents"
    echo ""
    echo "        $0  --appimage-help"
    echo "                   # Show available AppImage options"
    exec echo ""
fi


if [ x"$1" == "xlistman" ] ; then
    cd "$HERE/usr/share/man"
    exec find man* -type f | sed 's#^# man #;s#man man# man #;s#/# #;s#\.[0-9]$##'
    exit $?
fi


if [ x"$1" == "xman" ] ; then
    export MANPATH="$HERE/usr/share/man:$MANPATH" ; exec "$@"
    exit $?
fi


if [ x"$1" == "xlisthtml" ] ; then
    cd "$HERE/usr/share/man"
    exec find man* -type f -name "*.html"
    exit $?
fi


if [ x"$1" == "xhtml" ] ; then
    shift
    htmlfile=$(find "$HERE/usr/share/man" -name "${1}.html")
    xdg-open $1 || xdg-open ${1}.html
    exit $?
fi


if [ x"$1" == "xcat" ] ; then
    shift 1
    tst=$( basename $@ )
    cat $HERE/usr/share/cups/ipptool/$tst
    exit $?
fi


if [ x"$1" == "xlistdocs" ] ; then
    shift 1
    cd $HERE/usr/share/cups/ipptool
    echo
    echo "======= 2D ================="
    echo "JPG:"
    ls -1 *.jpg   | sed 's#^#  #'
    echo
    echo "PCL:"
    ls -1 *.pcl   | sed 's#^#  #'
    echo
    echo "PDF:"
    ls -1 *.pdf   | sed 's#^#  #'
    echo
    echo "PostScript:"
    ls -1 *.ps    | sed 's#^#  #'
    echo
    echo "PWG-Raster:"
    ls -1 *.pwg.gz| sed 's#^#  #'
    echo
    echo
    echo "======= 3D ================="
    echo "3MF:"
    ls -1 *.3mf   | sed 's#^#  #'
    echo
    echo "SCAD:"
    ls -1 *.scad  | sed 's#^#  #'
    echo
    echo "SLA:"
    ls -1 *.sla   | sed 's#^#  #'
    echo
    echo "STL:"
    ls -1 *.stl   | sed 's#^#  #'
    echo
    echo "( ^^^^^^^^ 3D testing not yet supported)"
    echo "----------------------------------------"
    echo
    exit $?
fi


if [ x"$1" == "xlisttests" ] ; then
    shift 1
    cd $HERE/usr/share/cups/ipptool
    exec ls *.test
    exit $?
fi


if [ ! -z $APPIMAGE ] ; then
    BINARY_NAME=$(basename "$ARGV0")
    if [ -e "$HERE/usr/bin/$BINARY_NAME" ] ; then
        exec "$HERE/usr/bin/$BINARY_NAME" "$@"
    else
        exec "$HERE/usr/bin/ippserver" "$@"
    fi
else
      exec "$HERE/usr/bin/ippserver" "$@"
fi
